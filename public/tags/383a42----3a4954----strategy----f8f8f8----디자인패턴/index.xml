<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>383a42  - 3a4954  - Strategy  - F8f8f8  - 디자인패턴 on Jun Kang&#39;s Blog</title>
    <link>http://localhost:1313/tags/383a42----3a4954----strategy----f8f8f8----%EB%94%94%EC%9E%90%EC%9D%B8%ED%8C%A8%ED%84%B4/</link>
    <description>Recent content in 383a42  - 3a4954  - Strategy  - F8f8f8  - 디자인패턴 on Jun Kang&#39;s Blog</description>
    <generator>Hugo -- 0.143.1</generator>
    <language>ko</language>
    <atom:link href="http://localhost:1313/tags/383a42----3a4954----strategy----f8f8f8----%EB%94%94%EC%9E%90%EC%9D%B8%ED%8C%A8%ED%84%B4/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>[디자인패턴] 전략(Strategy) 패턴의 개념, 예제, 장단점, 활용</title>
      <link>http://localhost:1313/posts/87/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/87/</guid>
      <description>&lt;p&gt;Strategy는 전략이라는 뜻으로 적을 해치우는 작전, 게임을 이기는 전략, 문제를 풀어나가는 방법 등의 의미가 있고, 특히 프로그래밍에서는 문제를 해결하는 방식인 &amp;ldquo;알고리즘&amp;quot;을 의미한다.
모든 프로그램은 문제를 해결하기 위해 존재하며, 특정 알고리즘으로 구현된다. Strategy 패턴에서는 이미 구현한 알고리즘을 쉽게 모두 교체할 수 있다. 즉, 스위치를 누르듯 쉽게 알고리즘을 바꿔서 같은 문제를 다른 방법으로 해결하기 쉽게 만들어주는 패턴이 Strategy 패턴이다.&lt;/p&gt;
&lt;h2 id=&#34;2-전략strategy-패턴의-구조&#34;&gt;2. 전략(Strategy) 패턴의 구조&lt;/h2&gt;
&lt;p&gt;전략 패턴의 구조와 예제에서 각 요소가 어떤 역할을 하는지 간단하게 먼저 살펴보자.
![](/images/posts/87/스크린샷 2024-04-12 오후 2.56.27.png)&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
