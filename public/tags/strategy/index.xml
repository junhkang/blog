<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Strategy on Jun Kang&#39;s Blog</title>
    <link>https://junhkang.com/tags/strategy/</link>
    <description>Recent content in Strategy on Jun Kang&#39;s Blog</description>
    <generator>Hugo -- 0.143.1</generator>
    <language>ko</language>
    <lastBuildDate>Fri, 12 Apr 2024 15:42:02 +0000</lastBuildDate>
    <atom:link href="https://junhkang.com/tags/strategy/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>[디자인패턴] 전략(Strategy) 패턴의 개념, 예제, 장단점, 활용</title>
      <link>https://junhkang.com/posts/87/</link>
      <pubDate>Fri, 12 Apr 2024 15:42:02 +0000</pubDate>
      <guid>https://junhkang.com/posts/87/</guid>
      <description>&lt;hr&gt;
&lt;h2 id=&#34;전략strategy-패턴이란&#34; ke-size=&#34;size26&#34;&gt;1. 전략(Strategy) 패턴이란?&lt;/h2&gt;
&lt;p&gt;Strategy는 전략이라는 뜻으로 적을 해치우는 작전, 게임을 이기는 전략, 문제를 풀어나가는 방법 등의 의미가 있고, 특히 프로그래밍에서는 문제를 해결하는 방식인 &amp;quot;알고리즘&amp;quot;을 의미한다.
 &lt;/p&gt;
&lt;p&gt;모든 프로그램은 문제를 해결하기 위해 존재하며, 특정 알고리즘으로 구현된다. Strategy 패턴에서는 이미 구현한 알고리즘을 쉽게 모두 교체할 수 있다. 즉, 스위치를 누르듯 쉽게 알고리즘을 바꿔서 같은 문제를 다른 방법으로 해결하기 쉽게 만들어주는 패턴이 Strategy 패턴이다.&lt;/p&gt;
&lt;h2 id=&#34;전략strategy-패턴의-구조&#34; ke-size=&#34;size26&#34;&gt;2. 전략(Strategy) 패턴의 구조&lt;/h2&gt;
&lt;p&gt;전략 패턴의 구조와 예제에서 각 요소가 어떤 역할을 하는지 간단하게 먼저 살펴보자.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
