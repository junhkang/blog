<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Gin on Jun Kang&#39;s Blog</title>
    <link>https://junhkang.com/tags/gin/</link>
    <description>Recent content in Gin on Jun Kang&#39;s Blog</description>
    <generator>Hugo -- 0.143.1</generator>
    <language>ko</language>
    <lastBuildDate>Wed, 13 Sep 2023 19:45:36 +0000</lastBuildDate>
    <atom:link href="https://junhkang.com/tags/gin/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>[PostgreSQL] GIN인덱스의 원리 및 특징</title>
      <link>https://junhkang.com/posts/10/</link>
      <pubDate>Wed, 13 Sep 2023 19:45:36 +0000</pubDate>
      <guid>https://junhkang.com/posts/10/</guid>
      <description>&lt;hr&gt;
&lt;h2 id=&#34;gin-인덱스란&#34; ke-size=&#34;size26&#34;&gt;[1. GIN 인덱스란?]{style=&amp;ldquo;color: #333333;&amp;rdquo;}&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;Generalized Inverted Index의 약자이다. 이전 포스트인 full text search에서 사용하는 인덱스의 유형. 기본 구조는 B-tree와 유사하지만, 저장 형태가 다르다.  저장된 요소 자제에 대한 검색이 아닌 인덱스 컬럼의 값을 split 한 token인 lexeme 배열에 대해서 검색을 한다. array_ops, tsvector_ops, jsonb_ops, jsonb_path_ops 등 의 built-in operators를 통해 접근이 가능하다.&lt;/p&gt;&lt;/blockquote&gt;
&lt;h2 id=&#34;full-text-search에서의-적용&#34; ke-size=&#34;size26&#34;&gt;[2. full text search에서의 적용]{style=&amp;ldquo;color: #333333;&amp;rdquo;}&lt;/h2&gt;
&lt;h3 id=&#34;샘플-테이블-및-데이터-생성&#34; ke-size=&#34;size23&#34;&gt;[2-1. 샘플 테이블 및 데이터 생성]{style=&amp;ldquo;color: #333333;&amp;rdquo;}&lt;/h3&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;create table ts(doc text, doc_tsv tsvector);

insert into ts(doc) values
  (&amp;#39;Can a sheet slitter slit sheets?&amp;#39;), 
  (&amp;#39;How many sheets could a sheet slitter slit?&amp;#39;),
  (&amp;#39;I slit a sheet, a sheet I slit.&amp;#39;),
  (&amp;#39;Upon a slitted sheet I sit.&amp;#39;), 
  (&amp;#39;Whoever slit the sheets is a good sheet slitter.&amp;#39;), 
  (&amp;#39;I am a sheet slitter.&amp;#39;),
  (&amp;#39;I slit sheets.&amp;#39;),
  (&amp;#39;I am the sleekest sheet slitter that ever slit sheets.&amp;#39;),
  (&amp;#39;She slits the sheet she sits on.&amp;#39;);

update ts set doc_tsv = to_tsvector(doc);
create index on ts using gin(doc_tsv);

select doc from ts where doc_tsv @@ to_tsquery(&amp;#39;many &amp;amp; slitter&amp;#39;);
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;조회-결과-및-플랜-확인&#34; ke-size=&#34;size23&#34;&gt;2-2. 조회 결과 및 플랜 확인&lt;/h3&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;                             QUERY PLAN                              
---------------------------------------------------------------------
 Bitmap Heap Scan on ts
   Recheck Cond: (doc_tsv @@ to_tsquery(&amp;#39;many &amp;amp; slitter&amp;#39;::text))
   -&amp;gt;  Bitmap Index Scan on ts_doc_tsv_idx
         Index Cond: (doc_tsv @@ to_tsquery(&amp;#39;many &amp;amp; slitter&amp;#39;::text))
(4 rows)
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt; &lt;/p&gt;</description>
    </item>
  </channel>
</rss>
