<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Streams on Jun Kang&#39;s Blog</title>
    <link>https://junhkang.com/tags/streams/</link>
    <description>Recent content in Streams on Jun Kang&#39;s Blog</description>
    <generator>Hugo -- 0.143.1</generator>
    <language>ko</language>
    <lastBuildDate>Tue, 30 Jan 2024 21:41:20 +0000</lastBuildDate>
    <atom:link href="https://junhkang.com/tags/streams/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>[Java] 자바 스트림(Streams)의 개념과 사용 방법</title>
      <link>https://junhkang.com/posts/56/</link>
      <pubDate>Tue, 30 Jan 2024 21:41:20 +0000</pubDate>
      <guid>https://junhkang.com/posts/56/</guid>
      <description>&lt;hr&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://junhkang.com/images/posts/56/img.png&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;자바-스트림streams이란&#34; ke-size=&#34;size26&#34;&gt;1. 자바 스트림(Streams)이란?&lt;/h2&gt;
&lt;p&gt;기존의 배열 또는 컬렉션 인스턴스는 for, foreach 같은 반복문을 통해 하나씩 핸들링하는 방식이었기에 로직이 복잡할수록 코드양도 많아지고 루프를 여러 번 도는 경우도 발생하였다. 그에 비해 자바 8에서 추가된 스트림(Streams)은 람다를 사용할 수 있는 기술 중 하나로 다음과 같은 특징을 가지고 있다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;스트림은 데이터의 흐름이라는 뜻으로 컬렉션에 저장되어 있는 요소들을 하나씩 순회하면서 처리할 수 있는 코드패턴이다.&lt;/li&gt;
&lt;li&gt;함수형 프로그래밍 언어에서 일반적으로 지원하는 연산관 데이터베이스와 비슷한 연산을 지원한다.&lt;/li&gt;
&lt;li&gt;배열/컬렉션의 함수 여러 개를 조합하여 원하는 결과를 필터링, 가공된 결과 추출 가능하며 람다식으로 코드를 간결하게 표현할 수 있다.&lt;/li&gt;
&lt;li&gt;하나의 작업을 둘 이상 작업으로 잘게 쪼개 동시에 처리하며 스레드를 이용하여 많은 요소들을 빠르게 처리 가능한다. &lt;/li&gt;
&lt;li&gt;컬렉션은 현재 자료구조가 포함하는 모든 값을 메모리에 저장하는 자료구조인데 비해, 스트림은 요청할 때만 요소를 계산하는 고정된 자료 구조이다.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;스트림에 사용에 대한 상세한 내용은 다음 3가지로 나눌 수 있다.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
