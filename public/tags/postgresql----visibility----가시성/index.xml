<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>PostgreSQL  - Visibility  - 가시성 on Jun Kang&#39;s Blog</title>
    <link>http://localhost:1313/tags/postgresql----visibility----%EA%B0%80%EC%8B%9C%EC%84%B1/</link>
    <description>Recent content in PostgreSQL  - Visibility  - 가시성 on Jun Kang&#39;s Blog</description>
    <generator>Hugo -- 0.143.1</generator>
    <language>ko</language>
    <lastBuildDate>Thu, 28 Mar 2024 15:54:02 +0000</lastBuildDate>
    <atom:link href="http://localhost:1313/tags/postgresql----visibility----%EA%B0%80%EC%8B%9C%EC%84%B1/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>\\[PostgreSQL\\] Visibility Map(가시성 맵)의 개념, 원리, 생명주기 및 정보 확인 방법
</title>
      <link>http://localhost:1313/posts/79/</link>
      <pubDate>Thu, 28 Mar 2024 15:54:02 +0000</pubDate>
      <guid>http://localhost:1313/posts/79/</guid>
      <description>&lt;h2 id=&#34;postgresql-visibility-map가시성-맵의-개념-원리-생명주기-및-정보-확인-방법&#34;&gt;[PostgreSQL] Visibility Map(가시성 맵)의 개념, 원리, 생명주기 및 정보 확인 방법&lt;/h2&gt;
&lt;p&gt;Postgresql&lt;/p&gt;
&lt;figure class=&#34;imageblock alignCenter&#34; width=&#34;359&#34; height=&#34;370&#34;&gt;
&lt;span data-lightbox=&#34;lightbox&#34;&gt; &lt;img src=&#34;http://localhost:1313/images/posts/79/img.png&#34; width=&#34;359&#34; height=&#34;370&#34; /&gt; &lt;/span&gt;
&lt;/figure&gt;
## 1. Visibility Map(가시성 맵)란?
Visibility Map은 트랜잭션에서 데이터에 접근할 때 어떤 데이터가 가시적인지(**모든 트랜잭션에서 읽을 수 있는지**), 안정적인지 (**동결된 튜플인지**) 판별하는데 도움을 준다. 데이터 접근 시 불필요한 I/O작업을 줄여주고, 데이터베이스가 어떤 페이지를 직접 접근할 수 있는지를 빠르게 판단함으로써 시스템의 효율적을 올려주는 역할을 한다.
## 2. Visibility Map(가시성 맵)의 데이터 관리
Visibility Map은 데이터를 주요 데이터와는 별도의 파일(fork)에 \_vm 접미사를 붙여 관리한다. 예를 들어 예를 들어 employees 테이블이 있다고 하면 테이블의 Visibility Map은 별도의 포크에 저장된다. 이 포크의 이름은 파일 노드 번호에 \_vm 접미사를 붙여 구성되며, 예를 들어 파일 노드번호가 12345인 경우 VM 파일은 12345_vm으로 저장된다. 데이터에는 해당 테이블의 page가 모든 트랜잭션에 보이는지, 동결된 튜플만을 포함하는지 등의 정보를 저장한다. 데이터베이스가 employees 테이블을 조회할 때, 가시성 맵을 먼저 확인한다. 만약 쿼리가 접근하려는 pages가 모든 트랜잭션에게 보이는 상태라고 확인되면, 시스템은 데이터에 더 빠르게 접근한다. 불필요한 버전검사나 락을 안 해도 되기에 성능이 향상된다.
## 3. Visibility Map(가시성 맵)의 원리
Visiblity Map은 힙 pages당 2개의 비트를 별도로 저장한다. 첫 번째 비트가 설정되어 있으면, 해당 페이지가 모두 visible(가시적) 한 상태이고, 이는 vacuum이 필요한 튜플을 포함하지 않는다는 뜻이다. 이는 인덱스 영역의 tuple만을 사용하여 **index-only-scan**으로 쿼리를 조회할 때도 사용된다. **index-only-scan**은 해당 포스트에서 확인 가능하다.
&lt;a href=&#34;https://junhkang.tistory.com/70&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2024.03.13 - [Postgresql] - [PostgreSQL] Index-Only 스캔과 Covering 인덱스, Index-only스캔의 효율적인 사용&lt;/a&gt;
&lt;figure id=&#34;og_1711607940443&#34; contenteditable=&#34;false&#34; data-ke-type=&#34;opengraph&#34; data-ke-align=&#34;alignCenter&#34; data-og-type=&#34;article&#34; data-og-title=&#34;[PostgreSQL] Index-Only 스캔과 Covering 인덱스, Index-only스캔의 효율적인 사용&#34; data-og-description=&#34;1. Index-Only Scans PostgreSQL의 모든 인덱스는 &amp;quot;보조(Secondary)&amp;quot; 인덱스이다. 각 인덱스는 테이블의 메인 데이터 영역(테이블의 heap 영역)과 분리되어서 저장된다. 그렇기 때문에 일반적인 인덱스 스캔에&#34; data-og-host=&#34;junhkang.tistory.com&#34; data-og-source-url=&#34;https://junhkang.tistory.com/70&#34; data-og-url=&#34;https://junhkang.tistory.com/70&#34; data-og-image=&#34;https://scrap.kakaocdn.net/dn/bzZRVr/hyVGS5ue5J/QBT58XKQmNlmQsncm6xGp1/img.png?width=800&amp;amp;height=79&amp;amp;face=0_0_800_79,https://scrap.kakaocdn.net/dn/XypxB/hyVDDhPjHN/2wPKk2t2myg49GmxLzsQCk/img.png?width=800&amp;amp;height=79&amp;amp;face=0_0_800_79&#34;&gt;
&lt;a href=&#34;https://junhkang.tistory.com/70&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34; data-source-url=&#34;https://junhkang.tistory.com/70&#34;&gt;&lt;/a&gt;
&lt;p&gt;[PostgreSQL] Index-Only 스캔과 Covering 인덱스, Index-only스캔의 효율적인 사용&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
