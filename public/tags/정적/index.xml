<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>정적 on Jun Kang&#39;s Blog</title>
    <link>http://localhost:1313/tags/%EC%A0%95%EC%A0%81/</link>
    <description>Recent content in 정적 on Jun Kang&#39;s Blog</description>
    <generator>Hugo -- 0.143.1</generator>
    <language>ko</language>
    <lastBuildDate>Thu, 18 Jan 2024 15:51:04 +0000</lastBuildDate>
    <atom:link href="http://localhost:1313/tags/%EC%A0%95%EC%A0%81/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>[이펙티브 자바] 1. 생성자 대신 정적 팩터리 메서드를 고려하라</title>
      <link>http://localhost:1313/posts/53/</link>
      <pubDate>Thu, 18 Jan 2024 15:51:04 +0000</pubDate>
      <guid>http://localhost:1313/posts/53/</guid>
      <description>&lt;hr&gt;
&lt;h2 id=&#34;생성자-대신-정적-팩토리-메서드를-고려하라&#34; ke-size=&#34;size26&#34;&gt;&lt;strong&gt;생성자 대신 정적 팩토리 메서드를 고려하라&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;클라이언트가 클래스 인스턴스를 얻는 방법에는 전통적인 방법 중 하나는  public이다. 하지만 &lt;strong&gt;정적 팩터리 메서드&lt;/strong&gt;(&lt;strong&gt;static factory method&lt;/strong&gt;)도 꼭 알아두어야한다.&lt;/p&gt;
&lt;h2 id=&#34;정적-팩터리-메서드란&#34; ke-size=&#34;size26&#34;&gt;1. 정적 팩터리 메서드란?&lt;/h2&gt;
&lt;p&gt;그렇다면 정적 팩터리 메서드는 무엇일까? 간단히 말해 객체 생성의 역할을 하는 클래스 메서드로, static 메서드를 통해 인스턴스를 생성하는 것이다. 다음은 java의 기본 Boolean 클래스 내 정적 팩토리 메서드의 간단한 예시이다. &lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;http://localhost:1313/images/posts/53/%EC%8A%A4%ED%81%AC%EB%A6%B0%EC%83%B7%202024-01-17%20%EC%98%A4%ED%9B%84%205.02.29.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;이팩티브 자바에서는 정적 팩토리 메서드를 사용할 시의 5가지 장점과 2가지 단점에 대해 서술하고 있어 자세한 비교를 통해 하나하나 알아보려 한다.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
