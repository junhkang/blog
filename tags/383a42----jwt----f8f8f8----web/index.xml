<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>383a42  - JWT  - F8f8f8  - Web on Jun Kang&#39;s Blog</title>
    <link>http://localhost:1313/tags/383a42----jwt----f8f8f8----web/</link>
    <description>Recent content in 383a42  - JWT  - F8f8f8  - Web on Jun Kang&#39;s Blog</description>
    <generator>Hugo -- 0.143.1</generator>
    <language>ko</language>
    <atom:link href="http://localhost:1313/tags/383a42----jwt----f8f8f8----web/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>[WEB] JWT 토큰 인증의 개념과 장단점</title>
      <link>http://localhost:1313/posts/41/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/41/</guid>
      <description>&lt;p&gt;JWT는 웹에서 사용자 인증/인가에 사용하는 토큰으로 Json Web Token의 줄임말이다. 웹에서 사용되는 JSON 형태의 토큰 표준 규격이며 쿠키와 유사하지만, 서명된 토큰이라는 차이점이 있다. 공개키, 개인키의 쌍으로 사용할 경우 서명된 토큰은 개인키를 보유한 서버에서만 복호화가 가능하다.
보통 Authorization HTTP 헤더를 Bearer  형태로 설정하여 클라이언트에서 서버로 전송한다. 서버에서는 토큰에 포함되어 있는 서명정보로 위변조를 검증하며 토큰은 Base64 인코딩 되어있다.&lt;/p&gt;
&lt;h2 id=&#34;2-jwt-구조&#34;&gt;2. JWT 구조&lt;/h2&gt;
&lt;p&gt;header, payload, signature가 각각 . 으로 구분되어 있다
&lt;code&gt;..&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;header - 토큰의 타입, 서명 알고리즘 이 저장
&lt;code&gt;{ &amp;quot;alg&amp;quot;: &amp;quot;HS256&amp;quot;, &amp;quot;typ&amp;quot;: &amp;quot;JWT&amp;quot; }&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;payload - 사용자의 인증 / 인가 정보를 key-value 형태로 저장
&lt;code&gt;{ &amp;quot;sub&amp;quot;: &amp;quot;1234567890&amp;quot;, &amp;quot;name&amp;quot;: &amp;quot;Ado Kukic&amp;quot;, &amp;quot;admin&amp;quot;: true, &amp;quot;iat&amp;quot;: 1464297885 }&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;signature - header와 payload가 비밀키로 서명되어 저장, header를 디코딩한 값, payload를 디코딩한 값을 합치고 서버의 개인키로 암호화를 한 값
![](/images/posts/41/스크린샷 2023-11-01 오후 6.04.05.png)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;3-jwt-표준-스펙&#34;&gt;3. JWT 표준 스펙&lt;/h2&gt;
&lt;p&gt;payload의 key의 값은 자유롭게 설정이 가능하지만, 네트워크 상으로 전송되기에 크기가 작아야 유리하기에 JSON 형태로 데이터를 저장할 때 키를 3글자로 줄이는 관행이 있다. 다음은 JWT key의 표준 스펙이다.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
