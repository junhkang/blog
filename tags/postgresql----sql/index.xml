<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>PostgreSQL  - SQL on Jun Kang&#39;s Blog</title>
    <link>http://localhost:1313/tags/postgresql----sql/</link>
    <description>Recent content in PostgreSQL  - SQL on Jun Kang&#39;s Blog</description>
    <generator>Hugo -- 0.143.1</generator>
    <language>ko</language>
    <lastBuildDate>Wed, 04 Oct 2023 19:34:40 +0000</lastBuildDate>
    <atom:link href="http://localhost:1313/tags/postgresql----sql/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>\\[PostgreSQL\\] 문자열내 중복 공백, 단어 제거
</title>
      <link>http://localhost:1313/posts/12/</link>
      <pubDate>Wed, 04 Oct 2023 19:34:40 +0000</pubDate>
      <guid>http://localhost:1313/posts/12/</guid>
      <description>&lt;h2 id=&#34;postgresql-문자열내-중복-공백-단어-제거&#34;&gt;[PostgreSQL] 문자열내 중복 공백, 단어 제거&lt;/h2&gt;
&lt;p&gt;Postgresql&lt;/p&gt;
&lt;figure class=&#34;imageblock alignCenter&#34;&gt;
&lt;span data-lightbox=&#34;lightbox&#34;&gt; &lt;img src=&#34;http://localhost:1313/images/posts/12/img.png&#34; /&gt; &lt;/span&gt;
&lt;/figure&gt;
## 1. 중복 공백 제거
&gt; 특정 문자열에 대해서 중복 공백 제거를 하고 싶다면 postgresql 정규식을 사용해서 가능하다.  
&gt; (공백 외에 단일 문자에 대한 중복제거도 동일한 방법으로 가능하다.)
``` sql
select regexp_replace(name, &#39; +&#39;, &#39; &#39;, &#39;g&#39;) from TABLE; -- &#39;g&#39; 옵션을 제거할 경우 최초 건에 대에서만 변경
```
## 2. 중복 단어 제거
&gt; 컬럼 단위 중복제거는 distinct, group by를 통해 쉽게 가능하지만, 컬럼 내 문자열의 중복 단어 제거의 경우 다음과 같다.  
&gt; (쉼표 기준으로 컬럼을 분리, 중복을 제거한 후 다시 연결)
``` sql
select id, array_to_string(array_agg(distinct token), &#39; &#39;) from (
SELECT unnest(string_to_array(COLUMN, &#39; &#39;)) as token, id FROM TABLE) as tmp
group by id
```
## 3. 실습
### 3-1. 테이블 생성
``` sql
-- 테스트 테이블 생성
create table duplicate_test (
    id serial primary key,
    name varchar(255) not null
);
```
### 3-2. 테스트 데이터 insert
``` sql
-- 테스트 데이터 입력
insert into duplicate_test
(name)
values
(&#39;서울  서울    대구 서울 부산&#39;),
(&#39;서울 서울 대구     서울&#39;),
(&#39;부산 대구 대구 서울   서울서울 서울 광주&#39;),
(&#39;서울 에서 대구   갔다가 부산 거쳐 다시   서울 로&#39;),
(&#39;광주광주대구 대구 대   구 서울  &#39;),
(&#39;서울 서울 서울 &#39;),
(&#39;서울 대구 대   구 서울  &#39;),
(&#39;서울 대구 대구 대   구 서울  &#39;),
(&#39;서울 대구    대구 대구 부산부산 서울 부산 서울부 산&#39;)
;
```
&lt;figure class=&#34;imageblock alignCenter&#34; width=&#34;572&#34; height=&#34;245&#34;&gt;
&lt;span data-lightbox=&#34;lightbox&#34;&gt; &lt;img src=&#34;http://localhost:1313/images/posts/12/스크린샷%202023-10-04%20오후%207.20.58.png&#34; width=&#34;572&#34; height=&#34;245&#34; /&gt; &lt;/span&gt;
&lt;/figure&gt;
### 3-3. 중복 공백 제거
``` sql
select regexp_replace(name, &#39; +&#39;, &#39; &#39;, &#39;g&#39;) from DUPLICATE_TEST; -- &#39;g&#39; 옵션을 제거할 경우 최초 건에 대에서만 변경
select regexp_replace(name, &#39;단일문자열+&#39;, &#39; &#39;, &#39;g&#39;) from DUPLICATE_TEST; -- 단일문자열에 대한 중복 제거도 동일한 방법으로 가능하다.
```
&lt;figure class=&#34;imageblock alignCenter&#34;&gt;
&lt;span data-lightbox=&#34;lightbox&#34;&gt; &lt;img src=&#34;http://localhost:1313/images/posts/12/스크린샷%202023-10-04%20오후%207.20.03.png&#34; /&gt; &lt;/span&gt;
&lt;/figure&gt;
### 3-4. 중복 단어 제거
``` sql
select id, array_to_string(array_agg(distinct token), &#39; &#39;) from (
SELECT unnest(string_to_array(name, &#39; &#39;)) as token, id FROM DUPLICATE_TEST) as tmp
group by id
```
&lt;figure class=&#34;imageblock alignCenter&#34;&gt;
&lt;span data-lightbox=&#34;lightbox&#34;&gt; &lt;img src=&#34;http://localhost:1313/images/posts/12/스크린샷%202023-10-04%20오후%207.20.20.png&#34; /&gt; &lt;/span&gt;
&lt;/figure&gt;
\#SQL \#PostgreSQL</description>
    </item>
  </channel>
</rss>
