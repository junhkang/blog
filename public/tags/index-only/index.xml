<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Index-Only on Jun Kang&#39;s Blog</title>
    <link>https://junhkang.com/tags/index-only/</link>
    <description>Recent content in Index-Only on Jun Kang&#39;s Blog</description>
    <generator>Hugo -- 0.143.1</generator>
    <language>ko</language>
    <lastBuildDate>Wed, 13 Mar 2024 18:52:22 +0000</lastBuildDate>
    <atom:link href="https://junhkang.com/tags/index-only/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>[PostgreSQL] Index-Only 스캔과 Covering 인덱스, Index-only스캔의 효율적인 사용</title>
      <link>https://junhkang.com/posts/70/</link>
      <pubDate>Wed, 13 Mar 2024 18:52:22 +0000</pubDate>
      <guid>https://junhkang.com/posts/70/</guid>
      <description>&lt;hr&gt;
&lt;h2 id=&#34;1-index-only-scans&#34;&gt;1. Index-Only Scans&lt;/h2&gt;
&lt;p&gt;PostgreSQL의 모든 인덱스는 &lt;strong&gt;&amp;quot;보조(Secondary)&amp;quot;&lt;/strong&gt; 인덱스이다. 각 인덱스는 테이블의 메인 데이터 영역(테이블의 &lt;strong&gt;heap&lt;/strong&gt; 영역)과 분리되어서 저장된다. 그렇기 때문에 일반적인 인덱스 스캔에서 각 ROW를 찾기 위해서는, index와 heap 영역 모두에 접근하여 데이터를 탐색해야 한다. 보통 WHERE 절 조건에 부합하는 데이터들은&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;인덱스 영역 -&lt;/strong&gt; 서로 가까이 존재하여 정렬된 순서로 빠르게 접근할 수 있다. (인덱스 테이블은 정렬된 상태로 생성)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;heap 영역 -&lt;/strong&gt;  특별한 규칙 없이 어디에서든 분포할 수 있기에 heap 영역을 스캔할 때는 무작위로 접근하게 되어 속도가 느리다.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;이 퍼포먼스 문제를 해결하기 위해 PostgreSQL은 힙 영역에 대한 접근 없이 인덱스 내에서만 데이터를 조회하는 &lt;strong&gt;Index-only&lt;/strong&gt; 스캔을 지원한다. 기본 개념은 말 그대로 heap 영역의 참조 없이 index 항목에서 바로 값을 반환하는 것으로 매우 효율적으로 보이지만 몇 가지 제한사항이 있다.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
