<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>383a42  - F8f8f8  - Jvms-3 on Jun Kang&#39;s Blog</title>
    <link>http://localhost:1313/tags/383a42----f8f8f8----jvms-3/</link>
    <description>Recent content in 383a42  - F8f8f8  - Jvms-3 on Jun Kang&#39;s Blog</description>
    <generator>Hugo -- 0.143.1</generator>
    <language>ko</language>
    <atom:link href="http://localhost:1313/tags/383a42----f8f8f8----jvms-3/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>[Java] Switch와 else-if의 효율성 비교 (Switch와 else-if 중에 어떤 걸 사용해야 할까?)</title>
      <link>http://localhost:1313/posts/36/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/36/</guid>
      <description>&lt;p&gt;조건에 따라 실행을 분기해야 할 때 우리는 조건문을 사용한다. Java에서는 switch / if-else 두 조건문을 선택적으로 사용 가능하다. 보통 가독성을 기준으로 선택을 많이 하나, 효율성 기준에서 어떤 것을 선택하는 것이 좋을지 비교해보려 한다.
일단 switch 구분에서 Strings를 사용하는 것에 관한 공식문서를 보면,&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;The switch statement compares the String object in its expression with the expressions associated with each case label as if it were using the String.equals method; consequently, the comparison of String objects in switch statements is case sensitive. The Java compiler generates generally more efficient bytecode from switch statements that use String objects than from chained if-then-else statements.
번역스위치 문은 각 조건에 있는 String 개체를 String.equals 메서드를 사용하는 것과 같은 방식으로 연관된 조건과 비교한다. 그렇기에 스위치문에서의 String 개체를 비교하는 것은 대소문자를 구분한다. Java 컴파일러는 일반적으로 체인 if-then-else 구문보다  스위치 문에서 더 효율적인 바이트 코드를 생성한다.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
