<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Foreign on Jun Kang&#39;s Blog</title>
    <link>http://localhost:50666/tags/foreign/</link>
    <description>Recent content in Foreign on Jun Kang&#39;s Blog</description>
    <generator>Hugo -- 0.143.1</generator>
    <language>ko</language>
    <lastBuildDate>Thu, 22 Feb 2024 18:28:23 +0000</lastBuildDate>
    <atom:link href="http://localhost:50666/tags/foreign/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>[PostgreSQL] 외래키(Foreign Keys) 개념, 사용법, 장단점, 적용검토</title>
      <link>http://localhost:50666/posts/64/</link>
      <pubDate>Thu, 22 Feb 2024 18:28:23 +0000</pubDate>
      <guid>http://localhost:50666/posts/64/</guid>
      <description>&lt;hr&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;http://localhost:50666/images/posts/64/img.png&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;foreign-key-외래키란&#34; ke-size=&#34;size26&#34;&gt;1. Foreign Key 외래키란?&lt;/h2&gt;
&lt;p&gt;Foreign key constraint 외래키 제약은 특정 칼럼 혹은 칼럼들의 값이 다른 테이블의 특정 row와 매칭되어야 하는 제약조건이다. 이를 두 관련 테이블 사이의 참조 무결성 (referential integrity)를 유지한다고 말한다. 그렇게 복잡한 개념은 아니니 바로 사용법을 확인해 보도록 하자&lt;/p&gt;
&lt;h2 id=&#34;예제&#34; ke-size=&#34;size26&#34;&gt;2. 예제&lt;/h2&gt;
&lt;h3 id=&#34;기본-외래키foreign-keys-생성&#34; ke-size=&#34;size23&#34;&gt;2-1. 기본 외래키(Foreign Keys) 생성&lt;/h3&gt;
&lt;p&gt;products 테이블은 물품의 이름, 가격 정보 테이블이고, orders 테이블은 존재하는 물품 각각에 대한 순서 정보가 들어있는 테이블이다. orders, products 테이블의 product_no에 외래키 제약을 적용하는 예제이다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>[PostgreSQL] 제약조건 (Constraint) 개념 및 설정 (Primary Keys, Foreign Keys, Unique, Not null, Check)</title>
      <link>http://localhost:50666/posts/21/</link>
      <pubDate>Tue, 10 Oct 2023 15:41:50 +0000</pubDate>
      <guid>http://localhost:50666/posts/21/</guid>
      <description>&lt;hr&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;http://localhost:50666/images/posts/21/img.png&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;postgresql-제약조건-constrant란&#34; ke-size=&#34;size26&#34;&gt;PostgreSQL 제약조건 (Constrant)란?&lt;/h2&gt;
&lt;p&gt;데이터베이스는 데이터 타입 외에 제약조건들을 통해 데이터의 무결성을 유지한다.&lt;/p&gt;
&lt;p&gt;제약조건에는 여러 가지 종류가 있으며 DMBS에 마다 다양하지만, 이번 포스트는 PostgreSQL의 5가지 제약 조건들을 설명하겠다.
 &lt;/p&gt;
&lt;p&gt;1. Primary Keys(PK)&lt;/p&gt;
&lt;p&gt;2. Foreign Keys(FK)&lt;/p&gt;
&lt;p&gt;3. Check&lt;/p&gt;
&lt;p&gt;4. Not-null&lt;/p&gt;
&lt;p&gt;5. Unique&lt;/p&gt;
&lt;h2 id=&#34;primary-keys-pk&#34; ke-size=&#34;size26&#34;&gt;1. Primary Keys (PK)&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Primary Keys는 테이블의 각 ROW를 구분하는 유니크한 컬럼 혹은 컬럼의 조합이다.&lt;/li&gt;
&lt;li&gt;Not null, Unique Constraints의 조합이다. 테이블인 단 1개의 PK만 가질 수 있다.&lt;/li&gt;
&lt;li&gt;PK 생성 시 Postgresql은 B-tree 인덱스를 자동으로 부여한다.&lt;/li&gt;
&lt;li&gt;B-tree 인덱스를 사용하기 때문에 컬럼의 조합으로 PK를 설정 시 순서가 중요하다. (상세 내용은 다음 포스트에서 확인이 가능하다.)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a href=&#34;https://junhkang.tistory.com/6&#34;&gt;[PostgreSQL] B-tree 인덱스의 원리 및 특징&lt;/a&gt;&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
