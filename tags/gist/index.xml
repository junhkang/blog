<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Gist on Jun Kang&#39;s Blog</title>
    <link>https://junhkang.com/tags/gist/</link>
    <description>Recent content in Gist on Jun Kang&#39;s Blog</description>
    <generator>Hugo -- 0.143.1</generator>
    <language>ko</language>
    <lastBuildDate>Wed, 13 Sep 2023 16:27:51 +0000</lastBuildDate>
    <atom:link href="https://junhkang.com/tags/gist/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>[PostgreSQL] GiST인덱스의 원리 및 특징</title>
      <link>https://junhkang.com/posts/8/</link>
      <pubDate>Wed, 13 Sep 2023 16:27:51 +0000</pubDate>
      <guid>https://junhkang.com/posts/8/</guid>
      <description>&lt;hr&gt;
&lt;h2 id=&#34;gist-인덱스란&#34; ke-size=&#34;size26&#34;&gt;1. GiST 인덱스란?&lt;/h2&gt;
&lt;p&gt;Generalized Search Tree의 약자이며 B-tree와 같은 balanced search tree의 형태이다. B-tree인덱스는 정렬된 채로 비교&amp;amp;일치의 연산에 최적화된 채로 연결되어있다. 하지만 현대의 다양한 데이터 종류 (기하학적, 텍스트문서, 이미지 등)를 연산하는 데는 적합하지 않다.&lt;/p&gt;
&lt;p&gt;GiST 인덱스는 이러한 데이터 타입의 인덱싱을 위해 설계되었다. GiST 인덱스는 각 유형의 데이터를 Balanced tree 형태로 구성하게하고, tree에 접근하는 연산자를 정의해 준다. 각각 leaf node는 table row(TID)와 boolean 형태의 predicate를 가지고 있고 인덱스 데이터(key)는 이 predicate와 부합한다. 그 후는 일반적인 tree search처럼, 루트노드에서 시작하여, 어떤 child node로 진입할지를 결정한다. 그러다가 leaf node를 발견하면, 그 결과들을 반환한다.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
